---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { cn } from '@/utils';
import type { RepoStats } from 'src/utils/projects';
import type { HTMLTag, Polymorphic } from 'astro/types';

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  project: RepoStats;
  imagePath?: string;
  altText?: string;
  class?: string;
}>;

console.log(Astro.props);

const { as: Tag = 'a', class: className, project, imagePath, altText } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');
if (imagePath && !images[imagePath])
  throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
---

<Tag
  class={cn(
    className,
    'flex flex-col gap-y-3 rounded-2xl border border-border bg-primary-foreground ',
    project.url && 'transition-all hover:border-foreground/25 hover:shadow-sm',
  )}
  href={project.url}
>
  {
    imagePath && (
      <Image
        src={images[imagePath]()}
        alt={altText}
        class='h-48 w-full rounded-2xl rounded-bl-none rounded-br-none object-cover'
        loading='eager'
      />
    )
  }
  <div class='flex flex-col gap-y-0.5 px-5 py-4'>
    <h1 class='text-lg font-medium'>{project.name}</h1>
    <p class='text-muted-foreground'>{project.description}</p>
  </div>

  <slot />
</Tag>
