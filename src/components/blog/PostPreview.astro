---
import type { HTMLTag, Polymorphic } from 'astro/types';
import type { CollectionEntry } from 'astro:content';

import FormattedDate from '../FormattedDate.astro';
import { Icon } from 'astro-icon/components';

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  post: CollectionEntry<'post'>;
  withDesc?: boolean;
};

const { as: Tag = 'div', post, withDesc = false } = Astro.props as Props<HTMLTag>;
const postDate = post.data.updatedDate ?? post.data.publishDate;
const isExternal = typeof post.data.external !== 'undefined';
const isNorwegian = post.data.lang === 'no';
---

<li class='flex flex-col gap-2 sm:flex-row sm:gap-x-4 [&_q]:basis-full'>
  <FormattedDate class='min-w-[120px]' date={postDate} />

  <Tag>
    {post.data.draft && <span class='text-red-500'>(Draft) </span>}
    <a
      data-astro-prefetch
      href={isExternal ? post.data.external : `/blog/${post.slug}/`}
      target={isExternal ? '_blank' : undefined}
      lang={isNorwegian ? 'no' : undefined}
      class='inline-flex items-center gap-1 transition-all hover:text-muted-foreground'
    >
      {post.data.title}
      {isNorwegian ? <span aria-label='Content in Norwegian'>(no)</span> : null}
      {isExternal && <Icon name='ph:arrow-square-out-bold' role='none' class='inline-block' />}
    </a>
    {
      withDesc && (
        <p class='line-clamp-3 block text-sm italic text-muted-foreground'>
          {post.data.description}
        </p>
      )
    }
  </Tag>
</li>
